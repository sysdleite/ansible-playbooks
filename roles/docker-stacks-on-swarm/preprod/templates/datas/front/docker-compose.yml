---
version: '3.3'

networks:
  it:
    external: true
  front:
    external: true
  back:
    external: true

volumes:
  consul:
    external: true

services:
###################################################
##########            CONSUL            ###########
###################################################
  consul:
    image: consul:1.10.1
    restart: unless-stopped
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0 #-enable-local-script-checks
    networks:
      - front
      - it
    environment:
      - CONSUL_LOCAL_CONFIG={"datacenter":"{{ project }}","server":true}
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_INTERFACE=eth0
    volumes:
      -  consul:/consul/data
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.1 8500 || exit 1" ]
      interval: 60s
      timeout: 5s
      retries: 30
    deploy:
      replicas: 2
      placement:
        constraints:
          - "node.role == manager"
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=front"
        - "traefik.frontend.entryPoints=web,websec"
        - "traefik.port=8500"
        - "traefik.frontend.rule=Host:consul.{{ suffixe_dns }}"
        ##### AUTHENTIFICATION
        - "traefik.frontend.auth.basic.users={{ auth_basic_accounts | join(',') }}"
        - "traefik.frontend.whiteList.sourceRange={{ ip_certified_admin | join(',') }}"
        - "traefik.frontend.whiteList.useXForwardedFor=true"
        ##### CUSTOM ERRORS PAGES
        - "traefik.frontend.errors.network.backend=error"
        - "traefik.frontend.errors.network.query=/{status}.html"
        - "traefik.frontend.errors.network.status=500-511"

###################################################
##########           TRAEFIK            ###########
###################################################
  traefik:
    image: traefik:v1.7.30-alpine
    restart: unless-stopped
    depends_on:
      - consul
    command:
      ##### DASHBOARD
      - "--api"
      ##### HEALTHCHECK
      - "--ping"
      ##### ENTRYPOINTS
      - "--entrypoints=Name:web Address::80 Redirect.EntryPoint:websec"
      - "--entrypoints=Name:websec Address::443 TLS"
      - "--defaultentrypoints=web,websec"
      ##### PROVIDER DOCKER
      - "--docker"
      - "--docker.swarmmode"
      - "--docker.exposedbydefault=false"
      - "--docker.swarmModeRefreshSeconds=30"
      ##### LOGGING
      - "--metrics"
      - "--accesslog"
      - "--loglevel=DEBUG"
      ##### CONSUL STORAGE CONFIG
      - "--consul"
      - "--consul.endpoint=consul:8500"
      - "--consul.prefix=traefik"
      ##### LET'S ENCRYPT SSL
      - "--acme.email={{ ssl_mail }}"
      - "--acme.storage=traefik/acme/account"
      - "--acme.entryPoint=websec"
      - "--acme.onHostRule=true"
      - "--acme.httpchallenge.entrypoint=web"
    networks:
      - front
      - back
      - it
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    healthcheck:
      test: [ "CMD-SHELL", "nc -z 127.0.0.1 8080 || exit 1" ]
      interval: 60s
      timeout: 5s
      retries: 30
    deploy:
      mode: global
      placement:
        constraints:
        - "node.role == manager"
      resources:
        reservations:
          cpus: '0.50'
          memory: '1.5G'
      update_config:
        parallelism: 1
        delay: 50s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=front"
        - "traefik.port=8080"
        ##### FRONTEND
        - "traefik.frontend.rule=Host:traefik.{{ suffixe_dns }}"
        - "traefik.frontend.entryPoints=web,websec"
        ##### AUTHENTIFICATION
        - "traefik.frontend.auth.basic.users={{ auth_basic_accounts | join(',') }}"
        - "traefik.frontend.whiteList.sourceRange={{ ip_certified_admin | join(',') }}"
        - "traefik.frontend.whiteList.useXForwardedFor=true"
        ##### CUSTOM ERRORS PAGES
        - "traefik.frontend.errors.network.backend=error"
        - "traefik.frontend.errors.network.query=/{status}.html"
        - "traefik.frontend.errors.network.status=500-511"
